// Grid system

// The grid system of mini.css utilizes the Flexbox layout to provide you with a simple, modern, responsive layout system for your web apps. Like most modern CSS frameworks' grid systems, it is composed of three main components - containers, rows and columns:

// The container (.container) is the outermost layer of the grid system and serves as a fluid wrapper, which can be used as the basis for your layout.
// Inside the container, you can add one or more rows (.row), which will in turn house the columns.
// Columns (col-*-*) are placed inside rows and they can be customized to display differently on different screen sizes, make use of fluid layouts, use offsets or change ordering.

.container {
    position: relative;
    width: 100%;
    margin: 0 auto;
    padding: 0 calc(1.5 * var(--universal-padding));
    list-style: none;

    &:before {
        @extend %clearfix;
    }

    &:after {
        @extend %clearfix;
    }
}

.row {
    box-sizing: border-box;
    display: flex;
    flex: 0 1 auto;
    flex-flow: row wrap;
}

// .w3-container,
// .w3-panel {
//     padding: 0.01em 16px
// }

.panel {
    margin-top: 16px;
    margin-bottom: 16px
}

.display {
    display: grid;
    grid-template-rows: 1fr 1fr 1fr;
    grid-template-columns: 1fr 1fr 1fr;
    justify-items: center;
    align-items: center;

    &-tl {
        grid-area: 1/1/span 1/span 1;
    }

    &-tm {
        grid-area: 1/2/span 1/span 1;
    }

    &-tr {
        grid-area: 1/3/span 1/span 1;
    }

    &-ml {
        grid-area: 2/1/span 1/span 1;
    }

    &-mm {
        grid-area: 2/2/span 1/span 1;
    }

    &-mr {
        grid-area: 2/3/span 1/span 1;
    }

    &-bl {
        grid-area: 3/1/span 1/span 1;
    }

    &-bm {
        grid-area: 3/2/span 1/span 1;
    }

    &-br {
        grid-area: 3/3/span 1/span 1;
    }

}

/* Card component CSS variable definitions */
:root {
    --card-back-color: #f8f8f8;
    --card-fore-color: #111;
    --card-border-color: #ddd;
}

.card {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-self: center;
    position: relative;
    width: 100%;
    background: var(--card-back-color);
    color: var(--card-fore-color);
    border: 0.0625rem solid var(--card-border-color);
    border-radius: var(--universal-border-radius);
    margin: var(--universal-margin);
    overflow: hidden;
}

@media screen and (min-width: 320px) {
    .card {
        max-width: 320px;
    }
}

.card>.section {
    background: var(--card-back-color);
    color: var(--card-fore-color);
    box-sizing: border-box;
    margin: 0;
    border: 0;
    border-radius: 0;
    border-bottom: 0.0625rem solid var(--card-border-color);
    padding: var(--universal-padding);
    width: 100%;
}

.card>.section.media {
    height: 200px;
    padding: 0;
    -o-object-fit: cover;
    object-fit: cover;
}

.card>.section:last-child {
    border-bottom: 0;
}

/*
    Custom elements for card elements.
  */
@media screen and (min-width: 240px) {
    .card.small {
        max-width: 240px;
    }
}

@media screen and (min-width: 480px) {
    .card.large {
        max-width: 480px;
    }
}

.card.fluid {
    max-width: 100%;
    width: auto;
}

.card.warning {
    --card-back-color: #ffca28;
    --card-border-color: #e8b825;
}

.card.error {
    --card-back-color: #b71c1c;
    --card-fore-color: #f8f8f8;
    --card-border-color: #a71a1a;
}

.card>.section.dark {
    --card-back-color: #e0e0e0;
}

.card>.section.double-padded {
    padding: calc(1.5 * var(--universal-padding));
}